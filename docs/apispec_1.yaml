components:
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  contact:
    url: https://github.com/mozzo1000/booklogr
  description: API for accessing BookLogr
  title: BookLogr API
  version: 1.0.0
openapi: 3.0.0
paths:
  /v1/books:
    get:
      parameters:
        - in: query
          name: status
          required: false
          schema:
            type: string
        - description: Field to sort by (progress, added_date, title, author, rating, reading_status, isbn)
          in: query
          name: sort_by
          required: false
          schema:
            type: string
        - description: Sorting order (asc or desc)
          in: query
          name: order
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns books in list
      security:
        - bearerAuth: []
      summary: Get books in list
      tags:
        - Books
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                author:
                  description: Author of the book
                  type: string
                current_page:
                  default: 0
                  description: Current page being read
                  type: integer
                description:
                  description: Description of the book
                  type: string
                isbn:
                  description: ISBN number
                  type: string
                reading_status:
                  default: To be read
                  description: Reading status
                  enum:
                    - To be read
                    - Currently reading
                    - Read
                  type: string
                title:
                  description: Title of the book
                  type: string
                total_pages:
                  default: 0
                  description: Total number of pages
                  type: integer
              required:
                - title
                - isbn
              type: object
        required: true
      responses:
        '200':
          description: Book added to list.
      security:
        - bearerAuth: []
      summary: Add book to list
      tags:
        - Books
  /v1/books/{id}:
    delete:
      parameters:
        - description: ID of book (NOT ISBN)
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book removed successfully.
        '404':
          description: Could not find any book with the supplied ID.
      security:
        - bearerAuth: []
      summary: Remove book from list
      tags:
        - Books
    patch:
      parameters:
        - description: ID of book (NOT ISBN)
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                current_page:
                  type: integer
                rating:
                  format: float
                  type: number
                status:
                  type: string
              type: object
        required: false
      responses:
        '200':
          description: Book changed successfully.
        '409':
          description: Recieved no JSON in body.
        '500':
          description: Unknown error occurred.
      security:
        - bearerAuth: []
      summary: Edit book
      tags:
        - Books
  /v1/books/{id}/notes:
    get:
      parameters:
        - description: ID of book (NOT ISBN)
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns notes attached to the book.
        '404':
          description: Notes could not be found.
      security:
        - bearerAuth: []
      summary: Get notes from book
      tags:
        - Books
    post:
      parameters:
        - description: ID of book (NOT ISBN)
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  description: Content of the note
                  type: string
                created_on:
                  description: Date of note creation (optional)
                  format: date-time
                  type: string
                visibility:
                  description: Visibility of the note (hidden or public)
                  type: string
              required:
                - content
              type: object
        required: true
      responses:
        '200':
          description: Note created.
      security:
        - bearerAuth: []
      summary: Add note to book
      tags:
        - Books
  /v1/books/{isbn}:
    get:
      parameters:
        - description: ISBN of book
          in: path
          name: isbn
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns book id and what list it is in.
        '404':
          description: Returns error and message, no book found in any reading list.
      security:
        - bearerAuth: []
      summary: Check if book (by isbn) is already in a list.
      tags:
        - Books
  /v1/files:
    get:
      responses:
        '200':
          description: Returns list of files.
        '404':
          description: No files could be found.
      security:
        - bearerAuth: []
      summary: Get list of files
      tags:
        - Files
  /v1/files/{filename}:
    get:
      parameters:
        - in: path
          name: filename
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns file.
        '500':
          description: Unknown error occurred.
      security:
        - bearerAuth: []
      summary: Download file
      tags:
        - Files
  /v1/notes/{id}:
    delete:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Note removed successfully.
        '404':
          description: No note found.
      security:
        - bearerAuth: []
      summary: Delete note
      tags:
        - Notes
    patch:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  description: Note content
                  type: string
                created_on:
                  description: Date of note creation (optional)
                  format: date-time
                  type: string
                quote_page:
                  description: Page of the quote
                  type: integer
                visibility:
                  type: string
              type: object
        required: false
      responses:
        '200':
          description: Note changed sucessfully.
        '500':
          description: Unknown error.
      security:
        - bearerAuth: []
      summary: Edit note
      tags:
        - Notes
  /v1/profiles:
    get:
      responses:
        '200':
          description: Information about the profile of the logged in user.
        '404':
          description: No profile found.
      security:
        - bearerAuth: []
      summary: Get profile of the logged in user
      tags:
        - Profiles
    patch:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                display_name:
                  type: string
                visibility:
                  type: string
              type: object
        required: false
      responses:
        '200':
          description: Profile updated.
        '404':
          description: Profile not found.
      security:
        - bearerAuth: []
      summary: Edit profile
      tags:
        - Profiles
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                display_name:
                  type: string
                visibility:
                  default: hidden
                  type: string
              required:
                - display_name
              type: object
        required: false
      responses:
        '200':
          description: Profile created.
        '409':
          description: Profile already exists.
      security:
        - bearerAuth: []
      summary: Create profile for logged in user
      tags:
        - Profiles
  /v1/profiles/{display_name}:
    get:
      parameters:
        - in: path
          name: display_name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Information about the profile.
        '404':
          description: Profile not found.
      summary: Get profile by name
      tags:
        - Profiles
  /v1/tasks:
    post:
      responses:
        '200':
          description: Task created.
      security:
        - bearerAuth: []
      summary: Create task
      tags:
        - Tasks
  /v1/tasks/{id}:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns information about the task.
        '404':
          description: Task could not be found.
      security:
        - bearerAuth: []
      summary: Get tasks
      tags:
        - Tasks
  /v1/tasks/{id}/retry:
    post:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task set to be retried.
        '404':
          description: Could not find task.
      security:
        - bearerAuth: []
      summary: Create task
      tags:
        - Tasks
